# JSONの小数値を検証できる

## JSON Pathを指定して小数値を検証できる
* レスポンスボディとしてシナリオデータストアに"{ \"key1\": 10.00, \"key2\": [ 0.01 ] }"を保存する
* レスポンスのJSONの"$.key1"が小数の"10.00"である
* レスポンスのJSONの"$.key2[0]"が小数の"0.01"である

## JSON Pathを指定して配列を取得し、一意の値を持つオブジェクトを抽出し、そのオブジェクト内の小数値を検証できる
* レスポンスボディとしてシナリオデータストアに"{\"key1\":[{\"id\":\"a\",\"key3\":1.0}, {\"id\":\"b\",\"key3\": 2.0 }, {\"id\":\"c\",\"key3\":3.0}]}"を保存する
* レスポンスのJSONの"$.key1"の配列の、UniqueKey"id"の値が"b"である要素の"key3"が、小数値の"2.0"である

## JSON Pathを指定して配列を取得し、その配列内に指定した小数値が存在することを検証できる
* レスポンスボディとしてシナリオデータストアに"{\"tests\": [1.1, 2.1, 3.1]}"を保存する
* レスポンスのJSONの配列"$.tests"に、小数値"3.1"が存在する

## JSON Pathを指定して配列を取得し、その配列内に指定した小数値が存在しないことを検証できる
* レスポンスボディとしてシナリオデータストアに"{\"tests\": [1.0, 3.3]}"を保存する
* レスポンスのJSONの配列"$.tests"に、小数値"2.1"が存在しない
